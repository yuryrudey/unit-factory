{"version":3,"file":"unit-factory.umd.js","sources":["../src/main.ts"],"sourcesContent":["export function parseValueUnitString(input: string | number): [number, string] {\r\n  let value: number\r\n  let unit: string\r\n\r\n  if(typeof input === 'string') {\r\n    input = input.trim()\r\n    const output = input.match(/^(?<value>(?:\\+|-)?\\d+(?:\\.\\d+)?(?:(?:e|E)(?:\\+|-)?\\d+)?) {0,1}(?<unit>[a-zA-Z]+)?$/)\r\n\r\n    if(!output || !output.groups)\r\n      throw new Error('Input is invalid')\r\n\r\n    value = parseFloat(output.groups.value)\r\n    unit = output.groups.unit ?? ''\r\n  } else {\r\n    value = input\r\n    unit = ''\r\n  }\r\n\r\n  if(isNaN(value))\r\n    throw new Error('Value is not a number')\r\n  if(!isFinite(value))\r\n    throw new Error('Value is infinite')\r\n\r\n  return [value, unit]\r\n}\r\n"],"names":["parseValueUnitString","input","value","unit","output"],"mappings":"mOAAO,SAASA,EAAqBC,EAA0C,CACzE,IAAAC,EACAC,EAED,GAAA,OAAOF,GAAU,SAAU,CAC5BA,EAAQA,EAAM,OACR,MAAAG,EAASH,EAAM,MAAM,qFAAqF,EAE7G,GAAA,CAACG,GAAU,CAACA,EAAO,OACd,MAAA,IAAI,MAAM,kBAAkB,EAE5BF,EAAA,WAAWE,EAAO,OAAO,KAAK,EAC/BD,EAAAC,EAAO,OAAO,MAAQ,EAAA,MAErBF,EAAAD,EACDE,EAAA,GAGT,GAAG,MAAMD,CAAK,EACN,MAAA,IAAI,MAAM,uBAAuB,EACtC,GAAA,CAAC,SAASA,CAAK,EACV,MAAA,IAAI,MAAM,mBAAmB,EAE9B,MAAA,CAACA,EAAOC,CAAI,CACrB"}